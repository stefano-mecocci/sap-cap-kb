import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.36bc40e2.js";const g=JSON.parse('{"title":"Pulsanti","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/pulsanti.md","filePath":"tutorials/pulsanti.md"}'),o={name:"tutorials/pulsanti.md"},e=l(`<h1 id="pulsanti" tabindex="-1">Pulsanti <a class="header-anchor" href="#pulsanti" aria-label="Permalink to &quot;Pulsanti&quot;">​</a></h1><p>In questa sezione viene mostrato come aggiungere pulsanti. Quelli usati sono i pulsanti del package <code>sap.m</code></p><h2 id="aggiungere-un-pulsante" tabindex="-1">Aggiungere un pulsante <a class="header-anchor" href="#aggiungere-un-pulsante" aria-label="Permalink to &quot;Aggiungere un pulsante&quot;">​</a></h2><p>Per ottenere un pulsante basterà usare il tag fornito in questo modo:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">Button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Sono un pulsante&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">Button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">text</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Sono un pulsante&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>Notiamo subito l&#39;attributo <code>text</code> che indica il testo del pulsante</p><h2 id="aggiungere-un-azione-al-clic" tabindex="-1">Aggiungere un azione al clic <a class="header-anchor" href="#aggiungere-un-azione-al-clic" aria-label="Permalink to &quot;Aggiungere un azione al clic&quot;">​</a></h2><p>Per aggiungere un azione alla pressione del pulsante dobbiamo eseguire due passi:</p><ol><li>creare l&#39;handler nel controller collegato alla view</li><li>collegare l&#39;handler con il pulsante</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-0SNAu" id="tab-Yb-eJTg" checked="checked"><label for="tab-Yb-eJTg">view.xml</label><input type="radio" name="group-0SNAu" id="tab-7MxSkl3"><label for="tab-7MxSkl3">controller.js</label></div><div class="blocks"><div class="language-xml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">Button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Sono un pulsante&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">press</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;.onHello&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">Button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">text</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Sono un pulsante&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">press</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;.onHello&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sap.ui.</span><span style="color:#B392F0;">define</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#9ECBFF;">&#39;sap/ui/core/mvc/Controller&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">Controller</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Controller.</span><span style="color:#B392F0;">extend</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;...&quot;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">onHello</span><span style="color:#E1E4E8;">() { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">alert</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello world&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">	});</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">sap.ui.</span><span style="color:#6F42C1;">define</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#032F62;">&#39;sap/ui/core/mvc/Controller&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">Controller</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;use strict&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Controller.</span><span style="color:#6F42C1;">extend</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;...&quot;</span><span style="color:#24292E;">, {</span></span>
<span class="line has-focus"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">onHello</span><span style="color:#24292E;">() { </span></span>
<span class="line has-focus"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello world&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line has-focus"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">	});</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div></div></div><p>Seguono subito alcune considerazioni</p><div class="info custom-block"><p class="custom-block-title">INFO</p><ul><li>Il collegamento avviene attraverso l&#39;attributo <code>press</code></li><li>nel valore dell&#39;attributo <code>press</code>, il nome dell&#39;handler va prefissato con un punto (è sintassi)</li><li>è convenzione nominare l&#39;handler con la parola <code>on</code> come prefisso e in camelCase</li></ul></div>`,12),p=[e];function t(c,r,i,u,E,y){return a(),n("div",null,p)}const h=s(o,[["render",t]]);export{g as __pageData,h as default};
