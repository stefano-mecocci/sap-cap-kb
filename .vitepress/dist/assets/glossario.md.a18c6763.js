import{_ as e,o as a,c as i,Q as o}from"./chunks/framework.36bc40e2.js";const m=JSON.parse('{"title":"Glossario","description":"","frontmatter":{},"headers":[],"relativePath":"glossario.md","filePath":"glossario.md"}'),l={name:"glossario.md"},t=o('<h1 id="glossario" tabindex="-1">Glossario <a class="header-anchor" href="#glossario" aria-label="Permalink to &quot;Glossario&quot;">​</a></h1><h2 id="controller" tabindex="-1">Controller <a class="header-anchor" href="#controller" aria-label="Permalink to &quot;Controller&quot;">​</a></h2><p>Uno dei tre elementi fondamentali del pattern MVC. Contiene la logica dell&#39;applicazione. Come ad esempio inizializzare la view, aggiornare i dati, elaborare gli input, ecc.</p><h2 id="view" tabindex="-1">View <a class="header-anchor" href="#view" aria-label="Permalink to &quot;View&quot;">​</a></h2><p>Contiene tutta la UI dell&#39;applicazione, gestisce come i dati vengono presentati all&#39;utente.</p><h2 id="manifest" tabindex="-1">Manifest <a class="header-anchor" href="#manifest" aria-label="Permalink to &quot;Manifest&quot;">​</a></h2><p>Descrive tutta la configurazione dell&#39;applicazione, fra cui:</p><ul><li>dipendenze</li><li>model</li><li>risorse statiche</li><li>routing</li><li>parametri dell&#39;applicazione (titolo, descrizione, versione, ecc.)</li></ul><h2 id="model" tabindex="-1">Model <a class="header-anchor" href="#model" aria-label="Permalink to &quot;Model&quot;">​</a></h2><p>Rappresenta la struttura dei dati all&#39;interno di un applicazione. Ne esistono di due categorie: quelli forniti di default (es. i18n) e quelli personalizzati definibili dallo sviluppatore.</p>',10),r=[t];function n(s,d,c,p,h,u){return a(),i("div",null,r)}const f=e(l,[["render",n]]);export{m as __pageData,f as default};
