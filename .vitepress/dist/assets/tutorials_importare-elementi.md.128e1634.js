import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.36bc40e2.js";const d=JSON.parse('{"title":"Importare elementi","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/importare-elementi.md","filePath":"tutorials/importare-elementi.md"}'),l={name:"tutorials/importare-elementi.md"},e=o(`<h1 id="importare-elementi" tabindex="-1">Importare elementi <a class="header-anchor" href="#importare-elementi" aria-label="Permalink to &quot;Importare elementi&quot;">​</a></h1><p>In questa sezione viene illustrato come importare elementi di SAP UI5 nelle view ma anche nei controller.</p><h2 id="view" tabindex="-1">View <a class="header-anchor" href="#view" aria-label="Permalink to &quot;View&quot;">​</a></h2><p>In questo blocco di codice importiamo la libreria <code>sap.m</code> per usare <code>Button</code>:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">mvc:View</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">controllerName</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;...&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">xmlns:mvc</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;sap.ui.core.mvc&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">xmlns:prova</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;sap.m&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">prova:Button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Fai qualcosa&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">mvc:View</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mvc:View</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">controllerName</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;...&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">xmlns:mvc</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sap.ui.core.mvc&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">xmlns:prova</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sap.m&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">prova:Button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">text</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Fai qualcosa&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mvc:View</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>Qui <code>prova</code> è un <em>alias</em>. In ogni import va sempre specificato un nome che funga da alias. Inoltre l&#39;alias va scritto anche come prefisso quando si usa un elemento della libreria.</p><div class="info custom-block"><p class="custom-block-title">Nota</p><p>La convenzione vuole che come alias si usi sempre il nome che segue dopo l&#39;ultimo punto della libreria (es. <code>m</code> per <code>sap.m</code> o <code>layout</code> per <code>sap.ui.layout</code>).</p></div><h3 id="import-senza-alias" tabindex="-1">Import senza alias <a class="header-anchor" href="#import-senza-alias" aria-label="Permalink to &quot;Import senza alias&quot;">​</a></h3><p>Esiste la possibilità di importare gli elementi di una libreria senza alias. Tuttavia <strong>questo si può fare per una sola libreria</strong>. Per farlo bisogna scrivere solo <code>xmlns</code>, in questo modo non si deve prefissare gli elementi della libreria quando si usano.</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">mvc:View</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">controllerName</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;...&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">xmlns:mvc</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;sap.ui.core.mvc&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">xmlns</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;sap.m&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">Button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Fai qualcosa&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">mvc:View</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mvc:View</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">controllerName</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;...&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">xmlns:mvc</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sap.ui.core.mvc&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">xmlns</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sap.m&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">Button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">text</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Fai qualcosa&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mvc:View</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Di solito questa scorciatoia si usa per <code>sap.m</code> in quanto i suoi elementi si usano spesso.</p></div><h2 id="controller" tabindex="-1">Controller <a class="header-anchor" href="#controller" aria-label="Permalink to &quot;Controller&quot;">​</a></h2><p>Per importare elementi, e non solo, in un controller dobbiamo fare due cose:</p><ul><li>specificare l&#39;import come stringa nell&#39;array (primo argomento)</li><li>aggiungere un parametro alla funzione (secondo argomento) con lo stesso nome</li></ul><p>Ogni import è una stringa che definisce un percorso nella libreria.</p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>Quando importiamo dobbiamo stare attenti a due cose:</p><ol><li>controllare che il percorso dell&#39;import sia scritto bene</li><li>assicurarsi che l&#39;<strong>ordine e il numero</strong> di import combaci con quello degli argomenti della funzione</li></ol></div><p><strong>Esempio di import corretto</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sap.ui.</span><span style="color:#B392F0;">define</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;sap/m/MessageToast&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;sap/m/Button&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">], </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">MessageToast</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">Button</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// code</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sap.ui.</span><span style="color:#6F42C1;">define</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;sap/m/MessageToast&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;sap/m/Button&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">], </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">MessageToast</span><span style="color:#24292E;">, </span><span style="color:#E36209;">Button</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// code</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>Esempio di import errato (ordine sbagliato)</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sap.ui.</span><span style="color:#B392F0;">define</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;sap/m/Button&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted error"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;sap/m/MessageToast&quot;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">], </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">MessageToast</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">Button</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// code</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">sap.ui.</span><span style="color:#6F42C1;">define</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;sap/m/Button&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted error"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;sap/m/MessageToast&quot;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">], </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">MessageToast</span><span style="color:#24292E;">, </span><span style="color:#E36209;">Button</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// code</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Nota</p><p>Il nome assegnato nei parametri può anche essere a piacere, ma è preferibile lasciarlo uguale a quello della libreria per aumentare la chiarezza del codice.</p></div>`,21),p=[e];function t(c,r,i,E,y,u){return a(),n("div",null,p)}const g=s(l,[["render",t]]);export{d as __pageData,g as default};
